// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.8 clang-703.0.31)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@protocol SpeedTestDelegate;
@class SpeedTestServer;
enum SpeedTestError : NSInteger;
@class SpeedTestNetwork;


/// The controller manages the speed test process. See also SpeedTestDelegate
SWIFT_CLASS("_TtC15SpeedcheckerSDK19SpeedTestController")
@interface SpeedTestController : NSObject
@property (nonatomic, readonly) NSInteger userID;
@property (nonatomic, readonly) NSInteger clientID;
@property (nonatomic, readonly, strong) id <SpeedTestDelegate> _Nullable delegate;
@property (nonatomic) NSTimeInterval downloadTimeout;
@property (nonatomic) NSTimeInterval uploadTimeout;
- (nonnull instancetype)initWithClientID:(NSInteger)clientID userID:(NSInteger)userID delegate:(id <SpeedTestDelegate> _Nullable)delegate OBJC_DESIGNATED_INITIALIZER;

/// The function starts a new speed test process. Optinally with a specified list of servers.
- (void)startWith:(NSArray<SpeedTestServer *> * _Nonnull)servers completion:(void (^ _Nonnull)(enum SpeedTestError error))completion;

/// The function starts a new speed test process.
- (void)start:(void (^ _Nonnull)(enum SpeedTestError error))completion;

/// The function finishes the current speed test process.
- (void)forceFinish:(void (^ _Nonnull)(enum SpeedTestError error))completion;
- (SpeedTestNetwork * _Nonnull)currentNetwork;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSString *, id> * _Nullable)change context:(void * _Null_unspecified)context;
@end

@class SpeedTestResult;
@class SpeedTestSpeed;

SWIFT_PROTOCOL("_TtP15SpeedcheckerSDK17SpeedTestDelegate_")
@protocol SpeedTestDelegate
- (void)speedTestDidFinishWithError:(enum SpeedTestError)error;
- (void)speedTestDidFinishWithResult:(SpeedTestResult * _Nonnull)result;
- (void)speedTestDidReceiveServers:(NSArray<SpeedTestServer *> * _Nonnull)servers;
- (void)speedTestDidSelectServer:(SpeedTestServer * _Nonnull)server withLatencyInMs:(NSInteger)latency;
- (void)speedTestDownloadDidStart;
- (void)speedTestDownloadDidFinish;
- (void)speedTestDownloadDidProgress:(double)progress withSpeed:(SpeedTestSpeed * _Nullable)speed;
- (void)speedTestUploadDidStart;
- (void)speedTestUploadDidFinish;
- (void)speedTestUploadDidProgress:(double)progress withSpeed:(SpeedTestSpeed * _Nullable)speed;
@end


/// The set of possible errors occur in the SpeedTestController object.
typedef SWIFT_ENUM(NSInteger, SpeedTestError) {
  SpeedTestErrorNone = 0,
  SpeedTestErrorApplicationNotValid = 1,
  SpeedTestErrorNoServerAvailable = 2,
  SpeedTestErrorAnotherTestInProgress = 3,
  SpeedTestErrorNoTestInProgress = 4,
  SpeedTestErrorNotSaved = 5,
  SpeedTestErrorCancelled = 6,
};

enum SpeedTestNetworkType : NSInteger;
@class CTCarrier;

SWIFT_CLASS("_TtC15SpeedcheckerSDK16SpeedTestNetwork")
@interface SpeedTestNetwork : NSObject
@property (nonatomic, readonly) enum SpeedTestNetworkType type;
@property (nonatomic, readonly, strong) CTCarrier * _Nullable cellularCarrier;
@property (nonatomic, readonly, copy) NSString * _Nullable cellularTechnology;
@property (nonatomic, readonly, copy) NSString * _Nullable networkShortDescription;
@end

typedef SWIFT_ENUM(NSInteger, SpeedTestNetworkType) {
  SpeedTestNetworkTypeAny = 0,
  SpeedTestNetworkTypeWiFi = 1,
  SpeedTestNetworkTypeCellular = 2,
};

@class NSDate;

SWIFT_CLASS("_TtC15SpeedcheckerSDK15SpeedTestResult")
@interface SpeedTestResult : NSObject
@property (nonatomic, strong) SpeedTestNetwork * _Nonnull network;
@property (nonatomic, readonly, strong) SpeedTestServer * _Nonnull server;
@property (nonatomic, readonly) NSInteger latencyInMs;
@property (nonatomic, readonly, strong) SpeedTestSpeed * _Nonnull downloadSpeed;
@property (nonatomic, readonly, strong) SpeedTestSpeed * _Nonnull uploadSpeed;
@property (nonatomic, readonly, copy) NSString * _Nullable ipAddress;
@property (nonatomic, readonly, copy) NSString * _Nullable ispName;
@property (nonatomic, readonly, strong) NSDate * _Nullable date;
+ (SpeedTestResult * _Nonnull)createWithPlain:(NSDate * _Nonnull)date latencyInMs:(NSInteger)latencyInMs downloadInBps:(double)downloadInBps uploadInBps:(double)uploadInBps ipAddress:(NSString * _Nullable)ipAddress ispName:(NSString * _Nullable)ispName networkType:(NSString * _Nullable)networkType serverID:(NSInteger)serverID serverDomain:(NSString * _Nullable)serverDomain serverCityName:(NSString * _Nullable)serverCityName serverCountryCode:(NSString * _Nullable)serverCountryCode;
@end



/// The model holds a physical server information.
SWIFT_CLASS("_TtC15SpeedcheckerSDK15SpeedTestServer")
@interface SpeedTestServer : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable scheme;
@property (nonatomic, readonly, copy) NSString * _Nullable domain;
@property (nonatomic, readonly, copy) NSString * _Nullable countryCode;
@property (nonatomic, readonly, copy) NSString * _Nullable cityName;
@end


SWIFT_CLASS("_TtC15SpeedcheckerSDK14SpeedTestSpeed")
@interface SpeedTestSpeed : NSObject
@property (nonatomic, readonly) double valueInBps;
- (nonnull instancetype)initFromBps:(double)value OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initFromKbps:(double)value OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initFromMbps:(double)value OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly) double valueInKbps;
@property (nonatomic, readonly) double valueInMbps;
@property (nonatomic, readonly, copy) NSString * _Nonnull descriptionInKbps;
@property (nonatomic, readonly, copy) NSString * _Nonnull descriptionInMbps;
@end

#pragma clang diagnostic pop
